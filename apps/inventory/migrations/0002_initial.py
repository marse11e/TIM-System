# Generated by Django 5.1.6 on 2025-03-06 22:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('orders', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='inventory',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_inventories', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
        migrations.AddField(
            model_name='inventorycount',
            name='counted_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_counts', to=settings.AUTH_USER_MODEL, verbose_name='Подсчитано'),
        ),
        migrations.AddField(
            model_name='inventorycount',
            name='inventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counts', to='inventory.inventory', verbose_name='Инвентаризация'),
        ),
        migrations.AddField(
            model_name='inventorycount',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_counts', to='orders.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='orders.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Создатель'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to='orders.order', verbose_name='Заказ'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_transactions', to='orders.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='destination_warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_transactions', to='inventory.warehouse', verbose_name='Склад-получатель'),
        ),
        migrations.AddField(
            model_name='inventorytransaction',
            name='source_warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='inventory.warehouse', verbose_name='Склад-источник'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventory.warehouse', verbose_name='Склад'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='inventory.warehouse', verbose_name='Склад'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorycount',
            unique_together={('inventory', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='inventoryitem',
            unique_together={('product', 'warehouse')},
        ),
    ]
